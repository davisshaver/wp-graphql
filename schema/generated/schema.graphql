# Avatar info.
type Avatar {
  size: Int
  url: String
}

# The caption for the media.
type Caption {
  rendered: String
}

# A unique identifier for a post.
type Category {
  id: Int
  count: Int
  description: String
  link: String
  name: String
  slug: String
  taxonomy: String
  parent: Category
  meta: [Meta]
}

# The content for a post.
type Content {
  rendered: String
  protected: Boolean
}

# The description for the media.
type Description {
  rendered: String
}

# An embeddable link for an entity.
type EmbeddableLink {
  href: String
  embeddable: Boolean
}

# The excerpt for a post.
type Excerpt {
  rendered: String
  protected: Boolean
}

# A unique identifier for a post.
type Guid {
  rendered: String
}

# A link for a post.
type Link {
  href: String
}

# An object.
type Media {
  id: Int
  date: String
  date_gmt: String
  guid: Guid
  modified: String
  modified_gmt: String
  slug: String
  type: String
  link: String
  title: Title
  author: User
  comment_status: String
  ping_status: String
  sticky: Boolean
  template: String
  meta: [Meta]
  description: Description
  caption: Caption
  alt_text: String
  media_type: String
  mime_type: String
  media_details: MediaDetails
  post: Int
  source_url: String
  _links: MediaLinks
}

# The details for the media.
type MediaDetails {
  width: Int
  height: Int
  file: String
  sizes: [MediaSize]
}

# The links for the media.
type MediaLinks {
  self: [Link]
  collection: [Link]
  about: [Link]
  author: [EmbeddableLink]
  replies: [EmbeddableLink]
}

# The details for the media size.
type MediaSize {
  name: String
  width: Int
  height: Int
  file: String
  mime_type: String
  source_url: String
}

# The metadata for a post.
type Meta {
  key: String
  value: String
}

# An object.
type Page {
  id: Int
  date: String
  date_gmt: String
  guid: Guid
  modified: String
  modified_gmt: String
  slug: String
  type: String
  link: String
  title: Title
  content: Content
  excerpt: Excerpt
  author: User
  featured_media: Int
  parent: Page
  menu_order: Int
  comment_status: String
  ping_status: String
  template: String
  meta: [Meta]
  _links: PageLinks
}

# The links for a page.
type PageLinks {
  self: [Link]
  collection: [Link]
  about: [Link]
  author: [EmbeddableLink]
  replies: [EmbeddableLink]
  history: [Link]
  up: [EmbeddableLink]
  attachment: [Link]
  term: [TermLink]
  curies: [TemplatedLink]
}

# An object.
type Post {
  id: Int
  date: String
  date_gmt: String
  guid: Guid
  modified: String
  modified_gmt: String
  slug: String
  type: String
  link: String
  title: Title
  content: Content
  excerpt: Excerpt
  author: User
  featured_media: Media
  comment_status: String
  ping_status: String
  sticky: Boolean
  template: String
  format: String
  meta: [Meta]
  categories: [Category]
  tags: [Tag]
  _links: PostLinks
}

# The links for a post.
type PostLinks {
  self: [Link]
  collection: [Link]
  about: [Link]
  author: [EmbeddableLink]
  replies: [EmbeddableLink]
  history: [Link]
  attachment: [Link]
  term: [TermLink]
  curies: [TemplatedLink]
}

type Query {
  posts: [Post]
  post(id: Int): Post
  users: [User]
  user(id: Int): User
  categories: [Category]
  category(id: Int): Category
  tags: [Tag]
  tag(id: Int): Tag
  pages: [Page]
  page(id: Int): Page
}

# A unique identifier for a post.
type Tag {
  id: Int
  count: Int
  description: String
  link: String
  name: String
  slug: String
  taxonomy: String
  meta: [Meta]
}

type TemplatedLink {
  name: String
  href: String
  templated: Boolean
}

type TermLink {
  taxonomy: String
  href: String
  embeddable: Boolean
}

# The title for a post.
type Title {
  rendered: String
}

# An object.
type User {
  id: Int
  name: String
  description: String
  link: String
  slug: String
  avatar_urls: [Avatar]
  _links: UserLinks
}

# The links for a user.
type UserLinks {
  self: [Link]
  collection: [Link]
}
